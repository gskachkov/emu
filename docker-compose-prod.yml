version: "3"
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: npm run start-watch
    volumes: 
      - ./api:/usr/app/
      - /usr/app/node_modules
    expose:
      - "3000"
    # ports:
    #   - "3000:3000"
    #   - "9229:9229"
    depends_on:
      - mongo
    environment:
      NODE_ENV: production
      MONGO_URL: mongodb://mongo:27017/${MONGO_INITDB_DATABASE}
      MONGO_USER: ${MONGO_USERNAME}
      MONGO_PWD: ${MONGO_PASSWORD}
      IS_LOCAL: ${IS_LOCAL}
  mongo:
    image: mongo
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:
      - ./data/mongo:/data/db
    ports:
      - "27017:27017"
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    depends_on:
      - nginx-proxy
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    command: npm run start
    volumes:
      - ./webapp:/usr/app/
      - /usr/app/node_modules
    ports:
      - "8080"
    depends_on:
      - api
    environment:
      - NODE_ENV=development
      - VIRTUAL_HOST=pro.juaning.dev
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST=pro.juaning.dev
      - LETSENCRYPT_EMAIL=goleadornato@yahoo.com
volumes: 
  certs:
  html:
  vhostd: